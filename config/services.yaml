# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    product_reservation_live_time: 10

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Slugger:
        class: EasySlugger\Slugger

    Symfony\Component\Serializer\Encoder\JsonDecode:

    App\Command\PurgeOldProductReservations:
        arguments:
            $time: '%product_reservation_live_time%'


    App\ShoppingProcess\Cart\Decorators\ItemsProductDecorator:
        arguments:
            $productRepository: '@App\Repository\ProductRepository'

    App\EventSubscriber\AddSlugToProductSubscriber:
        arguments:
            $slugger: '@Slugger'

    App\ShoppingProcess\OrderCreator:
        arguments:
            $em: '@doctrine.orm.entity_manager'

    App\ShoppingProcess\Payment:
        arguments:
            $apiKey: '%env(STRIPE_SECRET)%'

    orderDetails:
        class: App\ShoppingProccess\Order\OrderDetails

    App\ShoppingProcess\Cart:
        arguments:
            $session: '@session'

    ProductReservator:
        class: App\ShoppingProcess\Cart\ProductReservator
        arguments:
            $em: '@doctrine.orm.entity_manager'
            $reservedProductRepository: '@App\Repository\ReservedProductRepository'
            $session: '@session'


    App\ShoppingProcess\Cart\ProductReservationCounter:
        arguments:
            $productReservator: '@ProductReservator'



    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
